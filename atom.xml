<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Blamlam Blog]]></title>
  <link href="http://puliaiev.com/atom.xml" rel="self"/>
  <link href="http://puliaiev.com/"/>
  <updated>2015-01-20T09:13:08+02:00</updated>
  <id>http://puliaiev.com/</id>
  <author>
    <name><![CDATA[Sergii Puliaiev]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[HTTP(s) Proxy]]></title>
    <link href="http://puliaiev.com/blog/2015/01/20/proxy/"/>
    <updated>2015-01-20T23:46:09+02:00</updated>
    <id>http://puliaiev.com/blog/2015/01/20/proxy</id>
    <content type="html"><![CDATA[<p>Если у Вас в университете или на работе злые дяди ограничивают доступ к некоторым сайтам то эта статья для Вас. Будем в пару кликов поднимать http proxy сервер.</p>

<p>Далее опишу два способа, один простой, второй с использованием <a href="https://www.docker.com/">docker</a>.</p>

<!-- more -->


<p><strong>Общая часть.</strong> Регистрируемся на хостинге VPS. Создаем машину. Подключаемся к ней. Я использую <a href="https://www.digitalocean.com/?refcode=b72f06de4bb7">digitalocean</a> и всем рекомендую. Дальше немного детальней, как это сделать на digitalocean.</p>

<p>После того как Вы вошли в систему, жмем <strong>Create Droplet</strong> (Droplet - так называют виртуальные машины, с выделенным IP адресом в этом облачном хостинге). Вводим имя для сервера, я просто написал proxy. Выбираем размер, берем минимальный 5 дол. в месяц (если вы по реферальной моей ссылочке выше, Вам 10 дол. в подарок :) ). Регион любой. <strong>Available Settings</strong> оставляем без галочек. <strong>Select Image</strong> - заходим на вкладку <strong>Applications</strong> там берем <strong>node</strong> для простого или <strong>docker</strong> образ для сложного пути. Выбираем ключи для доступа, если у Вас нет, не волнуйтесь, логин и пароль к созданной машинке будет выслан на почту. Для завершения жмем большую зеленую кнопку внизу. Через 60 секунд виртуалка будет создана и будет ожидать нашего подключения. Запомните IP адрес машины, он будет вверху, после названия дроплета.</p>

<p><strong>Простой способ.</strong> Подключаемся к VPS, ставим нужный пакет:</p>

<pre><code>ssh root@104.236.83.6
npm install -g proxy
</code></pre>

<p>Ключ -g говорит о том что бинарники пакета будут доступны глобально. Мы используем пакет для NodeJS под названием <a href="https://www.npmjs.com/package/proxy">proxy</a>. Как по мне он отлично подходит для нашей задачи и еще он очень прост в использовании. Для запуска прокси сервера выполняем:</p>

<pre><code>proxy &amp;
</code></pre>

<p>Если все прошло успешно, увидим надпись:</p>

<pre><code>HTTP(s) proxy server listening on port 3128
</code></pre>

<p>Отключаемся от виртуалки. И можно смело настраивать систему на этот порт, IP нужно указать тот что у виртуалки, которую создавали выше.</p>

<p><strong>Способ с Docker.</strong> Подключаемся так же как в первом случае. Докер у Вас должен быть установлен, так как для этого случая мы выбрали образ системы с предустановленным Docker. Выполняем команду:</p>

<pre><code>docker run -it —-name proxycontainer node:0.10 bash
</code></pre>

<p>Попадаем внутрь контейнера. Там делаем:</p>

<pre><code>npm install -g proxy
</code></pre>

<p>Покидаем контейнер:</p>

<pre><code>exit
</code></pre>

<p>Сохраняем состояние контейнера в локальный образ:</p>

<pre><code>docker commit proxycontainer proxy
</code></pre>

<p>Запускаем наш прокси из образа:</p>

<pre><code>docker run -p 3128:3128 --restart="always" -d proxy proxy
</code></pre>

<p>Готово! Как бонус мы получили фишку от второго способа - перезапуск прокси, если что-то пойдет не так.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Как уснуть?]]></title>
    <link href="http://puliaiev.com/blog/2015/01/19/sleep/"/>
    <updated>2015-01-19T14:43:18+02:00</updated>
    <id>http://puliaiev.com/blog/2015/01/19/sleep</id>
    <content type="html"><![CDATA[<p>Часто не можете уснуть? Вот что может пригодиться:</p>

<blockquote><p>На счет раз вдыхаем, на счет два - выдыхаем и думать только о дыхании и счете.</p></blockquote>

<p><em>Патрик Джейн, Менталист, сезон 4, серия 12</em></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Fs_usage]]></title>
    <link href="http://puliaiev.com/blog/2015/01/19/fs-usage/"/>
    <updated>2015-01-19T14:42:28+02:00</updated>
    <id>http://puliaiev.com/blog/2015/01/19/fs-usage</id>
    <content type="html"><![CDATA[<p>Если Вам вдруг нужно узнать с какими файлами работает некая прога, на MacOS можно сделать так:</p>

<pre><code>sudo fs_usage -w | grep ApplicationName | grep open
</code></pre>

<p>Категория заметок, в блоге, открыта)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ansible]]></title>
    <link href="http://puliaiev.com/blog/2015/01/12/ansible/"/>
    <updated>2015-01-12T11:54:19+02:00</updated>
    <id>http://puliaiev.com/blog/2015/01/12/ansible</id>
    <content type="html"><![CDATA[<p>Сегодня поговорим о <a href="http://docs.ansible.com/intro.html">Ansible</a>. Ansible - это система управления компьютерами. Она имеет <a href="http://docs.ansible.com/modules_by_category.html">множество модулей</a>, для работы с чем угодно: выполнение скриптов, работа с файловой системой, системами контроля версий, менеджерами пакетов и тд. Мне он нравится тем что у него минимум зависимостей. Работает поверх ssh, требует установленный python, а он есть почти везде. Ansible я использовал в своем <a href="http://tw2vk.pp.ua">проекте</a> для деплоя.</p>

<p>Для начала установим его. <!-- more --> Можно сделать так:</p>

<pre><code>pip install ansible
</code></pre>

<p>Но я так делать не люблю, во первых это требует sudo (по крайней мере в MacOSX), во вторых если все подряд устанавливать, глобальных список установленных пакетов python будет огромен. В python есть замечательная утилита virtualenv. Ей я и пользовался для установки Ansible.</p>

<p>Virtualenv устанавливается командой:</p>

<pre><code>pip install virtualenv
</code></pre>

<p>дальше создаем виртуальное окружение:</p>

<pre><code>virtualenv env
</code></pre>

<p>env - имя окружения. Не забудьте его добавить в игнор, в своей системе контроля версий. После этой команды получим env папочку в текущей директории.</p>

<pre><code>. env/bin/activate
</code></pre>

<p>Активирует виртуальное окружение. Теперь команды pip и python работают в этом окружении.</p>

<p>Можно делать</p>

<pre><code>pip install ansible
</code></pre>

<p>и Ansible будет установлен в наше окружение.</p>

<p>Дальше нам нужен файл ansible.cfg, в текущем каталоге, со следующим содержимым (настройки ansible, по умолчанию он умеет брать настройки с текущего каталога):</p>

<pre><code>[defaults]
hostfile = ./hosts

[ssh_connection]
ssh_args = -o ForwardAgent=yes
</code></pre>

<p>Так же файл hosts, в нем будут хосты, которыми мы хотим управлять:</p>

<pre><code>[t2v]
134.100.60.1
</code></pre>

<p>И самое главное, плейбук (yaml файл), в котором мы пишем что хотим сделать на удаленной машине. Пример:</p>

<pre><code>---
- hosts: t2v
  user: root
  sudo: yes
  vars:
    proj_dir: ../../../
    proj_name: twitterexporter_1
    dest_dir: /app/
  tasks:
  - name: Apt
    apt: name=python-pip state=present
  - name: Prepare vars
    include_vars: ../.env
  - name: sync files
    synchronize: src={{proj_dir}}{{proj_name}} dest={{dest_dir}}
</code></pre>

<p>В первой строке сказали с какими машинами работать, дальше задали переменные, далее пошел раздел tasks, с заданиями. Установить, если не установленно python-pip, переменные окружения задать и синхронизировать папки (не явно работает с rsync). У меня были проблемы с rsync он пробовал подключиться к localhost по ssh. Чтоб это побороть я прописывал как нужно подключаться к localhost. Недавно все переписывал, убрал эту настройку, все заработало и так, наверное Ansible team все пофиксили.</p>

<p>Для запуска всего этого дела, используем команду:</p>

<pre><code>ansible-playbook t2v.yaml
</code></pre>

<p>Радуемся :)</p>

<p>Для того чтоб завершить работу с виртуальным окружением, пишем:</p>

<pre><code>deactivate
</code></pre>

<p>В следующей статье планирую написать детальней о модуле digital_ocean.</p>

<p><em>Дополнение:</em> в hosts файле можно писать домены:</p>

<pre><code>[t2v]
tw2vk.pp.ua
</code></pre>

<p><em>Дополнение:</em> для проверки доступа на сервер можно выполнить:</p>

<pre><code>ansible t2v -m ping -u root
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Пишите домашние проекты!]]></title>
    <link href="http://puliaiev.com/blog/2015/01/10/pishitie-domashniie-proiekty/"/>
    <updated>2015-01-10T11:00:34+02:00</updated>
    <id>http://puliaiev.com/blog/2015/01/10/pishitie-domashniie-proiekty</id>
    <content type="html"><![CDATA[<p>Добрый день,</p>

<p>Меня зовут Сергей и я буду писать блог. На самом деле это моя вторая попытка (<a href="http://sevaua.blogspot.com/">первая</a>). Блог будет о программировании, авто, покере, бильярде, фильмах, сериалах и прочих вещах.</p>

<p>Теперь по теме. Мне кажется что писать домашние проекты очень полезно. Дальше причины.</p>

<!--more-->


<ul>
<li><p>Изучение новых технологий. На работе, обычно, у тебя есть задача, ее нужно делать, технологии уже выбраны, бери, делай. На своем проекте можно выбирать самому, услышал про Redis в своем любимом подкасте, бах и запилил. И все равно что это был everhead на твоем маленьком проекте.</p></li>
<li><p>Собеседования. О своем проекте можно рассказать на следующем собеседовании. Обычно о работе говорить мало что можно (NDA). А вот о своем - болтай что угодно.</p></li>
<li><p>Надежда. Пишешь и думаешь - если выстрелит - сделаю бизнес, буду зарабатывать на нем деньги. У меня пока не получилось, ну кто знает.</p></li>
<li><p>Опыт. Читать статьи очень хорошо, но опробовав на практике можно найти много подводных камней. И вообще <a href="http://macode.ru/">ссылка</a>.</p></li>
</ul>


<p>Все это была прелюдия. Основная цель познакомить Вас с моим проектом - <a href="http://tw2vk.pp.ua">tw2vk</a>. Это сервис для мониторинга твиттера и пересылки твоих постов в ВК.</p>

<p>Позже планирую написать пару технических статей о сервисе, о технологиях, которые использовал, когда писал его.</p>

<p>Как говорит RWJ - подписывайтесь, ставьте палец вверх!</p>
]]></content>
  </entry>
  
</feed>
